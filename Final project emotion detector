import requests
import json

def emotion_detector(text_to_analyse):
    # Define the URL for the Watson NLP Emotion Predict function
    url = 'https://sn-watson-emotion.labs.skills.network/v1/watson.runtime.nlp.v1/NlpService/EmotionPredict'

    # Set up the JSON payload for the text to be analyzed
    payload = {"raw_document": {"text": text_to_analyse}}

    # Define the headers with the necessary model ID
    headers = {"grpc-metadata-mm-model-id": "emotion_aggregated-workflow_lang_en_stock"}

    # Send a POST request with the payload and headers
    response = requests.post(url, json=payload, headers=headers)

    # Convert the response text to a dictionary
    response_data = json.loads(response.text)

    # Extract emotions and their scores from the correct part of the response
    emotions = response_data.get("emotionPredictions", [{}])[0].get("emotion", {})
    anger_score = emotions.get("anger", 0)
    disgust_score = emotions.get("disgust", 0)
    fear_score = emotions.get("fear", 0)
    joy_score = emotions.get("joy", 0)
    sadness_score = emotions.get("sadness", 0)

    # Find the dominant emotion by selecting the highest score
    emotion_scores = {
        "anger": anger_score,
        "disgust": disgust_score,
        "fear": fear_score,
        "joy": joy_score,
        "sadness": sadness_score
    }
    dominant_emotion = max(emotion_scores, key=emotion_scores.get)

    # Return the required output format
    return {
        'anger': anger_score,
        'disgust': disgust_score,
        'fear': fear_score,
        'joy': joy_score,
        'sadness': sadness_score,
        'dominant_emotion': dominant_emotion
    }
